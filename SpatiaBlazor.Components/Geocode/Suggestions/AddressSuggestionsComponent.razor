@implements ISuggestionsView
@implements IDisposable
@inject ISuggestionsPresenter Presenter

<MudAutocomplete T="IGeocodeResultsViewModel" DebounceInterval="600" Label="US States" 
                 Value="Selection" ValueChanged="OnSelected" SearchFunc="@(async args => await Presenter.AutocompleteSuggestions(args, _cts.Token))" 
                 Variant="Variant.Outlined" ShowProgressIndicator="true"
                 ToStringFunc="@(model => model?.Label ?? string.Empty)"/>

@code {

    [Parameter] public IGeocodeResultsViewModel Selection { get; set; }
    
    [Parameter] public EventCallback<IGeocodeResultsViewModel> SelectionChanged { get; set; }

    private readonly CancellationTokenSource _cts = new ();

    protected override async Task OnInitializedAsync()
    {
        await Presenter.InitializeAsync(this);
    }

    private async Task OnSelected(IGeocodeResultsViewModel selected)
    {
        await SelectionChanged.InvokeAsync(selected);
    }

    public void TriggerRender()
    {
        StateHasChanged();
    }

    public void StartLoading()
    {
        //todo loading
    }

    public void StopLoading()
    {
        //todo loading
    }
    
    public void Dispose()
    {
        _cts.Cancel();
        _cts.Dispose();
    }
}